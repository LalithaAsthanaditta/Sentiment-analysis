## Model Training

This project does **not include the trained model files** due to file size constraints.

To generate the models locally, please run:

python train_model.py
This script will train the logistic regression model on the dataset and save the following files inside the models/ folder:
When you run the train_model.py script, it processes the dataset and saves the following essential files that are required for making predictions in the web app:

1) logistic_regression_model.pkl

This is the trained Logistic Regression model file.

It contains the learned weights and parameters for predicting sentiment from the input text.

2)tfidf_vectorizer.pkl

This is the TF-IDF Vectorizer object used to convert raw text into numerical feature vectors.

It ensures that new text input is transformed the same way as the training data.

3) prediction_history.csv

Stores user input reviews, predicted sentiment labels, and confidence scores (generated by the web app).

Usage
Both the model (logistic_regression_model.pkl) and vectorizer (tfidf_vectorizer.pkl) must be loaded by the web application to make predictions on new text data.

Make sure to have the dataset placed correctly and install the required packages.

Project Structure
/models              # Folder where trained models will be saved
train_model.py       # Script to train and save model
web_app.py           # Streamlit app for sentiment prediction
README.md            # Project overview and instructions
